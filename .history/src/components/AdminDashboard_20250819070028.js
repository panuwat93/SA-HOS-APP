import React, { useState, useEffect } from 'react';
import { Routes, Route, Link, useNavigate, useLocation } from 'react-router-dom';
import ChangePasswordModal from './ChangePasswordModal';
import StaffManagement from './StaffManagement';
import ScheduleManagement from './ScheduleManagement';
import PreExchangeSchedule from './PreExchangeSchedule';
import './AdminDashboard.css';

import TaskAssignment from './TaskAssignment';

function AdminDashboard() {
  const [showChangePassword, setShowChangePassword] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const navigate = useNavigate();
  const location = useLocation();

  useEffect(() => {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏à‡∏≤‡∏Å localStorage
    const checkAuthStatus = () => {
      const currentUser = localStorage.getItem('currentUser');
      if (currentUser) {
        try {
          const userData = JSON.parse(currentUser);
          if (userData.role === 'admin') {
            setUser(userData);
          } else {
            // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ staff
            navigate('/staff');
            return;
          }
        } catch (error) {
          console.error('Error parsing user data:', error);
          localStorage.removeItem('currentUser');
          navigate('/');
          return;
        }
      } else {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login
        navigate('/');
        return;
      }
      setLoading(false);
    };

    checkAuthStatus();
  }, [navigate]);

  const handleLogout = () => {
    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å localStorage
    localStorage.removeItem('currentUser');
    navigate('/');
  };

  if (loading) {
    return (
      <div className="admin-dashboard">
        <div className="loading-spinner">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>
      </div>
    );
  }

  return (
    <div className="admin-dashboard">
      <div className="header">
        <h1>üè• SA HOS APP</h1>
        <p>‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ß‡∏£‡πÅ‡∏•‡∏∞‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡∏á‡∏≤‡∏ô - ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô</p>
      </div>

      <div className="nav-menu">
        {/* ‡πÅ‡∏Æ‡∏°‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ */}
        <div className="mobile-menu-toggle" onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}>
          <span className={`hamburger ${isMobileMenuOpen ? 'active' : ''}`}></span>
        </div>

        {/* ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å */}
        <ul className={`nav-list ${isMobileMenuOpen ? 'mobile-open' : ''}`}>
          <li className="nav-item">
            <Link 
              to="/admin" 
              onClick={() => setIsMobileMenuOpen(false)}
              className={location.pathname === '/admin' ? 'active' : ''}
            >
              üìÖ ‡∏à‡∏±‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ß‡∏£
            </Link>
          </li>
          <li className="nav-item">
            <Link 
              to="/admin/tasks" 
              onClick={() => setIsMobileMenuOpen(false)}
              className={location.pathname === '/admin/tasks' ? 'active' : ''}
            >
              üìã ‡∏à‡∏±‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
            </Link>
          </li>
          <li className="nav-item">
            <Link 
              to="/admin/staff" 
              onClick={() => setIsMobileMenuOpen(false)}
              className={location.pathname === '/admin/staff' ? 'active' : ''}
            >
              üë• ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà
            </Link>
          </li>
          <li className="nav-item">
            <Link 
              to="/admin/pre-exchange" 
              onClick={() => setIsMobileMenuOpen(false)}
              className={location.pathname === '/admin/pre-exchange' ? 'active' : ''}
            >
              üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏•‡∏Å
            </Link>
          </li>
          <li className="nav-item">
            <button 
              onClick={() => {
                setShowChangePassword(true);
                setIsMobileMenuOpen(false);
              }}
              className="nav-button"
            >
              üîê ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™
            </button>
          </li>
          <li className="nav-item">
            <button onClick={() => {
              handleLogout();
              setIsMobileMenuOpen(false);
            }} className="nav-button logout">
              üö™ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
            </button>
          </li>
        </ul>
      </div>

      <div className="container">
        <Routes>
          <Route path="/" element={<ScheduleManagement user={user} />} />
          <Route path="/tasks" element={<TaskAssignment user={user} />} />
          <Route path="/staff" element={<StaffManagement />} />
          <Route path="/pre-exchange" element={<PreExchangeSchedule user={user} />} />
        </Routes>
      </div>

      {showChangePassword && (
        <ChangePasswordModal 
          onClose={() => setShowChangePassword(false)} 
        />
      )}
    </div>
  );
}

export default AdminDashboard;
